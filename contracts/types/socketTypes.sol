// SPDX-License-Identifier: Apache-2.0
pragma solidity ^0.8.14;

/// NOTE:
/**
    * Risk profile for LiqRequest:
    * @param bridgeId is checked against mapping with socket bridges
    * @param txData can be generated by the caller in anyway he desires
    * @param token must match token.safeTransferFrom, must be approved to the Router
    * @param isERC20 bridge specific, if token is native or not
    * @param amount needs to succedd in transfer, needs to be equal to stateReq
    * @param nativeAmount The amount of native tokens to send to the LZ

 */

struct LiqRequest {
    uint8 bridgeId; /// @dev what bridge to use to move tokens
    bytes txData; /// @dev socket generated data
    address token; /// @dev what token to move from src to dst
    bool isERC20; /// @dev changed from allowanceTarget / if native token or not
    uint256 amount; /// @dev in what amount token is bridged
    uint256 nativeAmount;
}

struct BridgeRequest {
    uint256 id;
    uint256 optionalNativeAmount;
    address inputToken;
    bytes data;
}

struct MiddlewareRequest {
    uint256 id;
    uint256 optionalNativeAmount;
    address inputToken;
    bytes data;
}

struct UserRequest {
    address receiverAddress;
    uint256 toChainId;
    uint256 amount;
    MiddlewareRequest middlewareRequest;
    BridgeRequest bridgeRequest;
}

struct LiqStruct {
    address inputToken;
    address bridge;
    UserRequest socketInfo;
}
