[profile.default]
solc_version = "0.8.23" # Override for the solc version (setting this ignores `auto_detect_solc`)
evm_version = "paris" # to prevent usage of PUSH0, which is not supported on all chains
gas_reports = [
  "SuperformRouter",
  "BaseForm",
  "SuperformFactory",
  "SuperPositions",
  "DstSwapper",
]
libraries = []
optimizer = true
optimizer_runs = 200
verbosity = 0
ffi = true
libs = ["lib"]
fs_permissions = [{ access = "read-write", path = "./" }]
remappings = [
  "solmate/=lib/ERC1155A/lib/solmate/src/",
  "ERC1155A/=lib/ERC1155A/src/",
]
out = "out"
script = "script"
src = "src"
test = "test"


[profile.localdev]
optimizer = false
out = 'localdev'

[profile.coverage]
fuzz = { runs = 1, max_test_rejects = 350_000 }
invariant = { runs = 10 }
src = 'src'
test = 'test'
script = 'src'

[profile.production]
out = 'out'       # separates optimized build folder (default profile) from localdev folder. Faster to build and deploy
src = 'src'
test = 'src'
script = 'script'

[rpc_endpoints]
ethereum = "${ETHEREUM_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
bsc = "${BSC_RPC_URL}"
avalanche = "${AVALANCHE_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"
base = "${BASE_RPC_URL}"
fantom = "${FANTOM_RPC_URL}"

[fuzz]
max_test_rejects = 1_000_000 # Number of times `vm.assume` can fail
runs = 50

[invariant]
runs = 20
depth = 2             # “Calls” refer to the number of times functions in the smart contract are called during a single test run. “Reverts” refers to the number of times a call to any function within the smart contract resulted in a transaction being reverted due to an error or exception.
fail_on_revert = true
call_override = false

[fmt]
bracket_spacing = true
int_types = "long"
line_length = 120
multiline_func_header = "all"
number_underscore = "thousands"
quote_style = "double"
tab_width = 4
wrap_comments = true
