name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  contract-sizes:
    name: Contract Sizes and Coverage
    runs-on: "SuperformCore"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: install dependencies
        run: forge install
      - name: run size check
        run: forge build --sizes
      - name: run coverage
        run: forge coverage
        env:
          # make fuzzing semi-deterministic to avoid noisy gas cost estimation
          # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}
          BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
          ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
          OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
          ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
          POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
          AVALANCHE_RPC_URL: ${{ secrets.AVALANCHE_RPC_URL }}
          FANTOM_RPC_URL: ${{ secrets.FANTOM_RPC_URL }}

  test:
    name: Contract Tests
    runs-on: "SuperformCore"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: install dependencies
        run: forge install
      - name: run tests
        run: forge test
        env:
          # make fuzzing semi-deterministic to avoid noisy gas cost estimation
          # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}
          BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
          ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
          OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
          ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
          POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
          AVALANCHE_RPC_URL: ${{ secrets.AVALANCHE_RPC_URL }}
          FANTOM_RPC_URL: ${{ secrets.FANTOM_RPC_URL }}

  codecov:
    name: Upload coverage reports to Codecov
    runs-on: "SuperformCore"
    steps:
      - uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  #slither:
  #  runs-on: ubuntu-latest
  # steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Slither
  #     uses: crytic/slither-action@v0.3.0
  #     id: slither
  #     with:
  #       slither-args: '--exclude-low --exclude-medium --no-fail-pedantic --exclude-optimization --exclude-informational --filter-paths mock,interfaces,lib,tests --json-types console,detectors'
  #       fail-on: none
