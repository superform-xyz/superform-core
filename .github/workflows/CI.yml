name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  tests:
    name: Hardhat Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.13.0]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install --legacy-peer-deps  
      - name: Run Tests
        run: npm run test
        env:
          BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          FANTOM_TESTNET_URL: ${{ secrets.FANTOM_TESTNET_URL }}
          FUJI_RPC_URL: ${{ secrets.FUJI_RPC_URL }}
          MUMBAI_RPC_URL: ${{ secrets.MUMBAI_RPC_URL }}
          PRODUCTION: ${{ secrets.PRODUCTION }}
          ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
          OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
          ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}

  foundry:
    name: Forge Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: dependencies
        run: forge install
      - name: tests
        run: forge test -vvv
        env:
          # make fuzzing semi-deterministic to avoid noisy gas cost estimation
          # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}
          BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
          ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
          OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
          ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
          POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
          AVALANCHE_RPC_URL: ${{ secrets.AVALANCHE_RPC_URL }}
          FANTOM_RPC_URL: ${{ secrets.FANTOM_RPC_URL }}

  foundry-snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: dependencies
        run: forge install
      - name: check contract sizes
        run: forge build --sizes
      - name: check gas snapshots
        run: forge snapshot --check
        env:
          # make fuzzing semi-deterministic to avoid noisy gas cost estimation
          # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}
          BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
          ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
          OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
          ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
          POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
          AVALANCHE_RPC_URL: ${{ secrets.AVALANCHE_RPC_URL }}
          FANTOM_RPC_URL: ${{ secrets.FANTOM_RPC_URL }}

  slither:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Slither
        uses: crytic/slither-action@v0.3.0
        id: slither
        with: 
          slither-args: '--exclude-low --exclude-medium --no-fail-pedantic --exclude-optimization --exclude-informational --filter-paths mock,interfaces --json-types console,detectors'